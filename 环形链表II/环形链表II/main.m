//
//  main.m
//  环形链表II
//
//  Created by lorne on 2020/10/12.
//  Copyright © 2020 lorne. All rights reserved.
//

#import <Foundation/Foundation.h>

int main(int argc, const char * argv[]) {
    @autoreleasepool {
       /*题目：
        给定一个链表，返回链表开始入环的第一个节点。 如果链表无环，则返回 null。
        说明：不允许修改给定的链表。
        进阶：
        你是否可以使用 O(1) 空间解决此题？
        */
        
        //因为空间复杂度是O(1)，不能讲已遍历过的链表节点存到一个哈希表，通过重复节点来片段是否有环。
        //所以我们使用的两个指针：慢指针（每次走一个节点）和快指针（每次走两个节点），快慢指针肯定会在环内相遇（有环）。
        // 通分析起点->环入口的距离 == N*环的距离 + 快慢指针相遇点->环入口节点距离。
        //所以使用两个慢指针，分别从链表头部和相遇点，开始移动最后两个指针会在环入口节点相遇，这时候就能得到环入口节点
        
        //结论推到过程看图片
        
        //代码就不写了。。。。思路知道代码就简单了
        
        
    }
    return 0;
}
